# Production Environment Configuration
# BlueDot Trading System - Production Scale (1000+ Files Daily)

# Environment Settings
environment:
  mode: "production"                      # production, development, testing
  debug: false                           # Disable debug mode in production
  log_level: "INFO"                      # INFO level for production (DEBUG for troubleshooting)
  
# Production Scale Configuration
scale:
  daily_processing:
    expected_files: 1000                  # Typical daily file count
    max_files: 2000                       # Maximum supported files
    target_processing_time: 45            # Target: 45 minutes for 1000 files
    max_processing_time: 90               # Alert if exceeds 90 minutes
    
  weekly_processing:
    expected_files: 1000                  # Typical weekly file count
    max_files: 2000                       # Maximum supported files
    target_processing_time: 50            # Target: 50 minutes for 1000 files
    max_processing_time: 100              # Alert if exceeds 100 minutes

# Resource Allocation (GitHub Actions Optimized)
resources:
  memory:
    total_limit_gb: 8                     # GitHub Actions total memory
    processing_limit_gb: 6                # Reserve 2GB for system
    batch_memory_mb: 1536                 # 1.5GB per batch (4 parallel batches)
    
  compute:
    runner_type: "ubuntu-latest"          # Standard GitHub runner
    parallel_workers: 4                   # Optimal for GitHub Actions
    cpu_cores: 2                          # GitHub Actions CPU allocation
    
  storage:
    temp_space_gb: 10                     # Temporary processing space
    output_limit_gb: 2                    # GitHub repository limit
    cleanup_after_processing: true       # Clean temp files after each batch

# Production Reliability
reliability:
  retry_logic:
    max_retries: 3                        # Retry failed operations 3 times
    exponential_backoff: true             # Use exponential backoff
    base_delay_seconds: 2                 # Start with 2 second delay
    max_delay_seconds: 60                 # Maximum 60 second delay
    
  error_handling:
    fail_fast: false                      # Continue processing other files if one fails
    partial_success_threshold: 95.0       # Accept batch if 95%+ files processed successfully
    quarantine_failed_files: true        # Move failed files to separate folder
    
  health_monitoring:
    enable_health_checks: true            # Monitor system health during processing
    memory_threshold: 90.0                # Alert if memory usage > 90%
    processing_time_threshold: 120.0      # Alert if processing > 2 hours
    success_rate_threshold: 95.0          # Alert if success rate < 95%

# Cloud Integration (Production)
cloud:
  google_drive:
    # Authentication
    api_key_secret: "GOOGLE_DRIVE_API_KEY"        # GitHub secret name
    service_account: false                         # Use API key authentication
    
    # Folder Configuration
    daily_folder_secret: "DAILY_FOLDER_ID"        # GitHub secret for daily folder ID
    weekly_folder_secret: "WEEKLY_FOLDER_ID"      # GitHub secret for weekly folder ID
    
    # Download Settings
    concurrent_downloads: 10               # Download 10 files simultaneously
    download_timeout: 600                  # 10 minutes per file download
    verify_download: true                  # Verify file integrity after download
    
    # Rate Limiting
    requests_per_second: 10                # Google Drive API rate limiting
    daily_quota_limit: 1000000000          # 1 billion requests/day (free tier)
    quota_usage_alert: 80.0                # Alert when 80% quota used
    
  github_pages:
    # Deployment Settings
    auto_deploy: true                      # Automatically deploy after processing
    deployment_branch: "gh-pages"          # Branch for GitHub Pages
    custom_domain: ""                      # Optional custom domain
    
    # File Management
    max_files_per_deployment: 5000         # Maximum files per deployment
    file_size_limit_mb: 25                 # GitHub Pages file size limit
    total_size_limit_gb: 1                 # Keep under 1GB for fast deployment
    
    # Optimization
    compress_csv_files: false              # TradingView needs uncompressed CSVs
    generate_index: true                   # Generate status index.html
    create_symlinks: true                  # Create 'latest' symlinks

# Notification System (Production)
notifications:
  slack_discord:
    success_webhook_secret: "SUCCESS_WEBHOOK_URL"  # GitHub secret for success notifications
    error_webhook_secret: "ERROR_WEBHOOK_URL"      # GitHub secret for error notifications
    
    # Notification Triggers
    notify_on_start: true                  # Notify when processing starts
    notify_on_success: true                # Notify on successful completion
    notify_on_failure: true                # Notify on processing failure
    notify_on_partial_success: true        # Notify when some files fail
    
    # Health Notifications
    health_check_notifications: true       # Send periodic health updates
    performance_alerts: true              # Alert on performance degradation
    quota_warnings: true                   # Alert when approaching API quotas
    
  message_formatting:
    include_statistics: true               # Include processing statistics
    include_performance_metrics: true     # Include timing and resource usage
    include_error_details: true           # Include error details for failures
    include_links: true                    # Include links to processed data

# Data Quality (Production)
data_quality:
  validation:
    strict_mode: true                      # Enable strict validation
    schema_validation: true                # Validate JSON schema
    data_completeness_check: true          # Check for missing required fields
    timestamp_validation: true             # Validate timestamp formats and order
    
  quality_metrics:
    min_success_rate: 95.0                 # Minimum 95% files must process successfully
    max_missing_data_percent: 5.0          # Maximum 5% missing data per file
    max_outliers_percent: 1.0              # Maximum 1% outliers per indicator
    
  error_recovery:
    auto_fix_timestamps: true              # Attempt to fix malformed timestamps
    interpolate_missing_values: false      # Don't interpolate missing values in production
    skip_corrupted_files: true             # Skip files that can't be parsed

# Output Configuration (TradingView Production)
output:
  csv_generation:
    precision: 6                           # 6 decimal places for price data
    scientific_notation: false             # Use standard notation
    include_metadata: false                # Don't include metadata in CSV files
    
  file_organization:
    create_date_folders: true              # Organize by date: /daily/2024-08-02/
    create_latest_symlinks: true           # Create /latest/ folders
    preserve_historical_data: true        # Keep historical data folders
    
  tradingview_optimization:
    format_timestamps: true                # Format timestamps for TradingView
    sort_by_date: true                     # Sort data chronologically
    validate_csv_format: true             # Validate TradingView CSV compatibility

# Monitoring & Analytics (Production)
monitoring:
  performance_tracking:
    track_processing_time: true            # Track time for each processing stage
    track_memory_usage: true              # Monitor memory usage patterns
    track_api_usage: true                 # Monitor Google Drive API usage
    track_success_rates: true             # Monitor file processing success rates
    
  logging:
    structured_logging: true               # Use structured JSON logging
    log_retention_days: 30                # Keep logs for 30 days
    log_rotation: true                     # Rotate logs daily
    
    # Log Levels
    application_log_level: "INFO"         # Application logging level
    api_log_level: "WARNING"               # API interaction logging
    performance_log_level: "INFO"         # Performance metrics logging
    
  metrics_collection:
    collect_system_metrics: true          # System resource usage
    collect_business_metrics: true        # Processing statistics
    collect_quality_metrics: true         # Data quality metrics
    
    # Export Options
    export_to_github_actions: true        # Export metrics to GitHub Actions logs
    export_to_webhooks: true              # Export metrics via webhook notifications

# Security (Production)
security:
  secrets_management:
    use_github_secrets: true              # Use GitHub encrypted secrets
    validate_secrets_exist: true          # Validate required secrets exist
    
  data_protection:
    encrypt_temp_files: false             # No encryption needed for market data
    secure_api_calls: true                # Use HTTPS for all API calls
    validate_ssl_certificates: true      # Validate SSL certificates
    
  access_control:
    public_csv_access: true               # CSVs are public via GitHub Pages
    restrict_api_access: true             # Restrict API keys to specific operations

# Deployment Settings
deployment:
  automation:
    scheduled_daily: "0 9 * * *"          # 9 AM UTC daily (GitHub Actions cron)
    scheduled_weekly: "0 10 * * 0"        # 10 AM UTC Sunday (GitHub Actions cron)
    
  manual_triggers:
    allow_manual_runs: true               # Allow manual workflow triggers
    require_confirmation: false           # No confirmation needed for manual runs
    
  environment_promotion:
    auto_deploy_to_production: true       # Auto-deploy after successful processing
    rollback_on_failure: true             # Rollback to previous version on failure

# Maintenance
maintenance:
  data_retention:
    keep_processed_data_days: 90          # Keep processed CSVs for 90 days
    archive_old_data: true                # Archive data older than retention period
    cleanup_temp_files: true              # Clean temporary files after processing
    
  system_maintenance:
    update_dependencies: false            # Don't auto-update in production
    performance_optimization: true        # Apply performance optimizations
    capacity_planning: true               # Monitor and plan for capacity needs

# Development & Testing
development:
  test_mode: false                        # Disable test mode in production
  mock_apis: false                        # Use real APIs in production
  sample_data_testing: false             # Don't use sample data
  
  debugging:
    enable_debug_logs: false              # Disable debug logging
    save_intermediate_files: false        # Don't save intermediate processing files
    profile_performance: false            # Disable performance profiling

---
# Production Checklist
# ✅ All required GitHub secrets configured
# ✅ Google Drive folder structure created
# ✅ GitHub Actions workflows enabled
# ✅ GitHub Pages configured
# ✅ Notification webhooks tested
# ✅ Sample data processing verified
# ✅ Production scale processing tested
# ✅ Monitoring and alerting active